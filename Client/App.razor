@using Client.LocalServices
@using Client.Pages.Authentication
@using Client.Routing

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(AuthenticationLayout)">
                <NotAuthorized>
                    <Login />
                </NotAuthorized>
            </AuthorizeRouteView>
            <FocusOnNavigate RouteData="@routeData" Selector="h1" />
        </Found>
        <NotFound>
            <PageTitle>Login</PageTitle>
            <LayoutView Layout="@typeof(AuthenticationLayout)">
                <Login />
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    [Inject] public NavigationManager NavManager { get; set; } = null!;
    [Inject] public CustomAuthStateProvider AuthStateProvider { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        bool isAuthenticated = (await AuthStateProvider.GetAuthenticationStateAsync()).User.Identity!.IsAuthenticated;
        if (isAuthenticated) NavManager.NavigateTo(ClientRoutes.VehiculoListRoute);
        else NavManager.NavigateTo(ClientRoutes.LoginRoute);
    }
}
