// <auto-generated />
using System;
using DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250228050740_VehiculoEntityRefactorPK")]
    partial class VehiculoEntityRefactorPK
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.EstadoReservaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EstadoReserva");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Confirmada"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Cancelada"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Finalizada"
                        });
                });

            modelBuilder.Entity("Entities.EstadoVehiculoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EstadoVehiculo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Disponible"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Rentado"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Mantenimiento"
                        });
                });

            modelBuilder.Entity("Entities.ReservaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CedulaUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateOnly>("FechaFin")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaInicio")
                        .HasColumnType("date");

                    b.Property<int>("IdEstadoReserva")
                        .HasColumnType("int");

                    b.Property<string>("PlacaVehiculo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CedulaUsuario");

                    b.HasIndex("IdEstadoReserva");

                    b.HasIndex("PlacaVehiculo");

                    b.ToTable("Reserva");
                });

            modelBuilder.Entity("Entities.UsuarioEntity", b =>
                {
                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Cedula");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Entities.VehiculoEntity", b =>
                {
                    b.Property<string>("Placa")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("EstadoVehiculoId")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PrecioPorDia")
                        .HasColumnType("real");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Placa");

                    b.HasIndex("EstadoVehiculoId");

                    b.ToTable("Vehiculo");
                });

            modelBuilder.Entity("Entities.ReservaEntity", b =>
                {
                    b.HasOne("Entities.UsuarioEntity", "Cliente")
                        .WithMany()
                        .HasForeignKey("CedulaUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.EstadoReservaEntity", "EstadoReseva")
                        .WithMany()
                        .HasForeignKey("IdEstadoReserva")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.VehiculoEntity", "Vehiculo")
                        .WithMany()
                        .HasForeignKey("PlacaVehiculo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("EstadoReseva");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("Entities.VehiculoEntity", b =>
                {
                    b.HasOne("Entities.EstadoVehiculoEntity", "EstadoVehiculo")
                        .WithMany()
                        .HasForeignKey("EstadoVehiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoVehiculo");
                });
#pragma warning restore 612, 618
        }
    }
}
